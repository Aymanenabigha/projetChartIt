/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgramme
entryRuleProgramme
:
{ before(grammarAccess.getProgrammeRule()); }
	 ruleProgramme
{ after(grammarAccess.getProgrammeRule()); } 
	 EOF 
;

// Rule Programme
ruleProgramme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgrammeAccess().getGroup()); }
		(rule__Programme__Group__0)
		{ after(grammarAccess.getProgrammeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphe
entryRuleGraphe
:
{ before(grammarAccess.getGrapheRule()); }
	 ruleGraphe
{ after(grammarAccess.getGrapheRule()); } 
	 EOF 
;

// Rule Graphe
ruleGraphe 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGrapheAccess().getGroup()); }
		(rule__Graphe__Group__0)
		{ after(grammarAccess.getGrapheAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColonne
entryRuleColonne
:
{ before(grammarAccess.getColonneRule()); }
	 ruleColonne
{ after(grammarAccess.getColonneRule()); } 
	 EOF 
;

// Rule Colonne
ruleColonne 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColonneAccess().getGroup()); }
		(rule__Colonne__Group__0)
		{ after(grammarAccess.getColonneAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDonner
entryRuleDonner
:
{ before(grammarAccess.getDonnerRule()); }
	 ruleDonner
{ after(grammarAccess.getDonnerRule()); } 
	 EOF 
;

// Rule Donner
ruleDonner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDonnerAccess().getGroup()); }
		(rule__Donner__Group__0)
		{ after(grammarAccess.getDonnerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeGraphe
ruleTypeGraphe
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeGrapheAccess().getAlternatives()); }
		(rule__TypeGraphe__Alternatives)
		{ after(grammarAccess.getTypeGrapheAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Couleurs
ruleCouleurs
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCouleursAccess().getAlternatives()); }
		(rule__Couleurs__Alternatives)
		{ after(grammarAccess.getCouleursAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeGraphe__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeGrapheAccess().getLineEnumLiteralDeclaration_0()); }
		('line')
		{ after(grammarAccess.getTypeGrapheAccess().getLineEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGrapheAccess().getBarEnumLiteralDeclaration_1()); }
		('bar')
		{ after(grammarAccess.getTypeGrapheAccess().getBarEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeGrapheAccess().getPieEnumLiteralDeclaration_2()); }
		('pie')
		{ after(grammarAccess.getTypeGrapheAccess().getPieEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Couleurs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCouleursAccess().getRedEnumLiteralDeclaration_0()); }
		('red')
		{ after(grammarAccess.getCouleursAccess().getRedEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCouleursAccess().getBlueEnumLiteralDeclaration_1()); }
		('blue')
		{ after(grammarAccess.getCouleursAccess().getBlueEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCouleursAccess().getGreenEnumLiteralDeclaration_2()); }
		('green')
		{ after(grammarAccess.getCouleursAccess().getGreenEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCouleursAccess().getPinkEnumLiteralDeclaration_3()); }
		('pink')
		{ after(grammarAccess.getCouleursAccess().getPinkEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__0__Impl
	rule__Programme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getProgrammeAction_0()); }
	()
	{ after(grammarAccess.getProgrammeAccess().getProgrammeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__1__Impl
	rule__Programme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getPKeyword_1()); }
	'P'
	{ after(grammarAccess.getProgrammeAccess().getPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__2__Impl
	rule__Programme__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getProgrammeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__3__Impl
	rule__Programme__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getNameAssignment_3()); }
	(rule__Programme__NameAssignment_3)
	{ after(grammarAccess.getProgrammeAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__4__Impl
	rule__Programme__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__5__Impl
	rule__Programme__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getDonnerKeyword_5()); }
	'donner'
	{ after(grammarAccess.getProgrammeAccess().getDonnerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__6__Impl
	rule__Programme__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__7__Impl
	rule__Programme__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgrammeAccess().getDonnerAssignment_7()); }
		(rule__Programme__DonnerAssignment_7)
		{ after(grammarAccess.getProgrammeAccess().getDonnerAssignment_7()); }
	)
	(
		{ before(grammarAccess.getProgrammeAccess().getDonnerAssignment_7()); }
		(rule__Programme__DonnerAssignment_7)*
		{ after(grammarAccess.getProgrammeAccess().getDonnerAssignment_7()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__8__Impl
	rule__Programme__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGroup_8()); }
	(rule__Programme__Group_8__0)*
	{ after(grammarAccess.getProgrammeAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__9__Impl
	rule__Programme__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__10__Impl
	rule__Programme__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getColonneKeyword_10()); }
	'colonne'
	{ after(grammarAccess.getProgrammeAccess().getColonneKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__11__Impl
	rule__Programme__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_11()); }
	'{'
	{ after(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__12__Impl
	rule__Programme__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgrammeAccess().getColonneAssignment_12()); }
		(rule__Programme__ColonneAssignment_12)
		{ after(grammarAccess.getProgrammeAccess().getColonneAssignment_12()); }
	)
	(
		{ before(grammarAccess.getProgrammeAccess().getColonneAssignment_12()); }
		(rule__Programme__ColonneAssignment_12)*
		{ after(grammarAccess.getProgrammeAccess().getColonneAssignment_12()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__13__Impl
	rule__Programme__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGroup_13()); }
	(rule__Programme__Group_13__0)*
	{ after(grammarAccess.getProgrammeAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__14__Impl
	rule__Programme__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_14()); }
	'}'
	{ after(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__15__Impl
	rule__Programme__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGrapheKeyword_15()); }
	'graphe'
	{ after(grammarAccess.getProgrammeAccess().getGrapheKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__16__Impl
	rule__Programme__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_16()); }
	'{'
	{ after(grammarAccess.getProgrammeAccess().getLeftCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__17__Impl
	rule__Programme__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgrammeAccess().getGrapheAssignment_17()); }
		(rule__Programme__GrapheAssignment_17)
		{ after(grammarAccess.getProgrammeAccess().getGrapheAssignment_17()); }
	)
	(
		{ before(grammarAccess.getProgrammeAccess().getGrapheAssignment_17()); }
		(rule__Programme__GrapheAssignment_17)*
		{ after(grammarAccess.getProgrammeAccess().getGrapheAssignment_17()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__18__Impl
	rule__Programme__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGroup_18()); }
	(rule__Programme__Group_18__0)*
	{ after(grammarAccess.getProgrammeAccess().getGroup_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__19
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__19__Impl
	rule__Programme__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__19__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_19()); }
	'}'
	{ after(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_19()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__20
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group__20__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_20()); }
	'}'
	{ after(grammarAccess.getProgrammeAccess().getRightCurlyBracketKeyword_20()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_8__0__Impl
	rule__Programme__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getProgrammeAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getDonnerAssignment_8_1()); }
	(rule__Programme__DonnerAssignment_8_1)
	{ after(grammarAccess.getProgrammeAccess().getDonnerAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_13__0__Impl
	rule__Programme__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getCommaKeyword_13_0()); }
	','
	{ after(grammarAccess.getProgrammeAccess().getCommaKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getColonneAssignment_13_1()); }
	(rule__Programme__ColonneAssignment_13_1)
	{ after(grammarAccess.getProgrammeAccess().getColonneAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__Group_18__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_18__0__Impl
	rule__Programme__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_18__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getCommaKeyword_18_0()); }
	','
	{ after(grammarAccess.getProgrammeAccess().getCommaKeyword_18_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_18__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Programme__Group_18__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__Group_18__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgrammeAccess().getGrapheAssignment_18_1()); }
	(rule__Programme__GrapheAssignment_18_1)
	{ after(grammarAccess.getProgrammeAccess().getGrapheAssignment_18_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graphe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__0__Impl
	rule__Graphe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getNameAssignment_0()); }
	(rule__Graphe__NameAssignment_0)
	{ after(grammarAccess.getGrapheAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__1__Impl
	rule__Graphe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGrapheAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__2__Impl
	rule__Graphe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getDataKeyword_2()); }
	'data'
	{ after(grammarAccess.getGrapheAccess().getDataKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__3__Impl
	rule__Graphe__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getGrapheAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__4__Impl
	rule__Graphe__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getDataAssignment_4()); }
	(rule__Graphe__DataAssignment_4)
	{ after(grammarAccess.getGrapheAccess().getDataAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__5__Impl
	rule__Graphe__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getGrapheAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__6__Impl
	rule__Graphe__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getTypeKeyword_6()); }
	'type'
	{ after(grammarAccess.getGrapheAccess().getTypeKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__7__Impl
	rule__Graphe__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getEqualsSignKeyword_7()); }
	'='
	{ after(grammarAccess.getGrapheAccess().getEqualsSignKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__8__Impl
	rule__Graphe__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getTypeAssignment_8()); }
	(rule__Graphe__TypeAssignment_8)
	{ after(grammarAccess.getGrapheAccess().getTypeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__9__Impl
	rule__Graphe__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getCommaKeyword_9()); }
	','
	{ after(grammarAccess.getGrapheAccess().getCommaKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__10__Impl
	rule__Graphe__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getColonneKeyword_10()); }
	'colonne'
	{ after(grammarAccess.getGrapheAccess().getColonneKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__11__Impl
	rule__Graphe__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getEqualsSignKeyword_11()); }
	'='
	{ after(grammarAccess.getGrapheAccess().getEqualsSignKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__12__Impl
	rule__Graphe__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getColonneAssignment_12()); }
	(rule__Graphe__ColonneAssignment_12)
	{ after(grammarAccess.getGrapheAccess().getColonneAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__13__Impl
	rule__Graphe__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getGroup_13()); }
	(rule__Graphe__Group_13__0)*
	{ after(grammarAccess.getGrapheAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__14__Impl
	rule__Graphe__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getCommaKeyword_14()); }
	','
	{ after(grammarAccess.getGrapheAccess().getCommaKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__15__Impl
	rule__Graphe__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getBagColorKeyword_15()); }
	'bagColor'
	{ after(grammarAccess.getGrapheAccess().getBagColorKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__16__Impl
	rule__Graphe__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getEqualsSignKeyword_16()); }
	'='
	{ after(grammarAccess.getGrapheAccess().getEqualsSignKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__17__Impl
	rule__Graphe__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getBagColorAssignment_17()); }
	(rule__Graphe__BagColorAssignment_17)
	{ after(grammarAccess.getGrapheAccess().getBagColorAssignment_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group__18__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getRightCurlyBracketKeyword_18()); }
	'}'
	{ after(grammarAccess.getGrapheAccess().getRightCurlyBracketKeyword_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Graphe__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group_13__0__Impl
	rule__Graphe__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getCommaKeyword_13_0()); }
	','
	{ after(grammarAccess.getGrapheAccess().getCommaKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Graphe__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGrapheAccess().getColonneAssignment_13_1()); }
	(rule__Graphe__ColonneAssignment_13_1)
	{ after(grammarAccess.getGrapheAccess().getColonneAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Colonne__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__0__Impl
	rule__Colonne__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getColonneAction_0()); }
	()
	{ after(grammarAccess.getColonneAccess().getColonneAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__1__Impl
	rule__Colonne__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getNameAssignment_1()); }
	(rule__Colonne__NameAssignment_1)
	{ after(grammarAccess.getColonneAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__2__Impl
	rule__Colonne__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getColonneAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__3__Impl
	rule__Colonne__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getLabelKeyword_3()); }
	'label'
	{ after(grammarAccess.getColonneAccess().getLabelKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__4__Impl
	rule__Colonne__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getEqualsSignKeyword_4()); }
	'='
	{ after(grammarAccess.getColonneAccess().getEqualsSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__5__Impl
	rule__Colonne__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getLabelAssignment_5()); }
	(rule__Colonne__LabelAssignment_5)
	{ after(grammarAccess.getColonneAccess().getLabelAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__6__Impl
	rule__Colonne__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getColonneAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__7__Impl
	rule__Colonne__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getColorKeyword_7()); }
	'color'
	{ after(grammarAccess.getColonneAccess().getColorKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__8__Impl
	rule__Colonne__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getColonneAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__9__Impl
	rule__Colonne__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getColorAssignment_9()); }
	(rule__Colonne__ColorAssignment_9)
	{ after(grammarAccess.getColonneAccess().getColorAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colonne__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColonneAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getColonneAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Donner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Donner__Group__0__Impl
	rule__Donner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDonnerAccess().getDonnerAction_0()); }
	()
	{ after(grammarAccess.getDonnerAccess().getDonnerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Donner__Group__1__Impl
	rule__Donner__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDonnerAccess().getNameAssignment_1()); }
	(rule__Donner__NameAssignment_1)
	{ after(grammarAccess.getDonnerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Donner__Group__2__Impl
	rule__Donner__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDonnerAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDonnerAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Donner__Group__3__Impl
	rule__Donner__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDonnerAccess().getLinkAssignment_3()); }
	(rule__Donner__LinkAssignment_3)
	{ after(grammarAccess.getDonnerAccess().getLinkAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Donner__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDonnerAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDonnerAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Programme__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getProgrammeAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__DonnerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getDonnerDonnerParserRuleCall_7_0()); }
		ruleDonner
		{ after(grammarAccess.getProgrammeAccess().getDonnerDonnerParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__DonnerAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getDonnerDonnerParserRuleCall_8_1_0()); }
		ruleDonner
		{ after(grammarAccess.getProgrammeAccess().getDonnerDonnerParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__ColonneAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getColonneColonneParserRuleCall_12_0()); }
		ruleColonne
		{ after(grammarAccess.getProgrammeAccess().getColonneColonneParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__ColonneAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getColonneColonneParserRuleCall_13_1_0()); }
		ruleColonne
		{ after(grammarAccess.getProgrammeAccess().getColonneColonneParserRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__GrapheAssignment_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getGrapheGrapheParserRuleCall_17_0()); }
		ruleGraphe
		{ after(grammarAccess.getProgrammeAccess().getGrapheGrapheParserRuleCall_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Programme__GrapheAssignment_18_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgrammeAccess().getGrapheGrapheParserRuleCall_18_1_0()); }
		ruleGraphe
		{ after(grammarAccess.getProgrammeAccess().getGrapheGrapheParserRuleCall_18_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getGrapheAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__DataAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getDataDonnerCrossReference_4_0()); }
		(
			{ before(grammarAccess.getGrapheAccess().getDataDonnerEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getGrapheAccess().getDataDonnerEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getGrapheAccess().getDataDonnerCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__TypeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getTypeTypeGrapheEnumRuleCall_8_0()); }
		ruleTypeGraphe
		{ after(grammarAccess.getGrapheAccess().getTypeTypeGrapheEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__ColonneAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getColonneColonneCrossReference_12_0()); }
		(
			{ before(grammarAccess.getGrapheAccess().getColonneColonneEStringParserRuleCall_12_0_1()); }
			ruleEString
			{ after(grammarAccess.getGrapheAccess().getColonneColonneEStringParserRuleCall_12_0_1()); }
		)
		{ after(grammarAccess.getGrapheAccess().getColonneColonneCrossReference_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__ColonneAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getColonneColonneCrossReference_13_1_0()); }
		(
			{ before(grammarAccess.getGrapheAccess().getColonneColonneEStringParserRuleCall_13_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getGrapheAccess().getColonneColonneEStringParserRuleCall_13_1_0_1()); }
		)
		{ after(grammarAccess.getGrapheAccess().getColonneColonneCrossReference_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Graphe__BagColorAssignment_17
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGrapheAccess().getBagColorCouleursEnumRuleCall_17_0()); }
		ruleCouleurs
		{ after(grammarAccess.getGrapheAccess().getBagColorCouleursEnumRuleCall_17_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getColonneAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__LabelAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneAccess().getLabelEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getColonneAccess().getLabelEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colonne__ColorAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColonneAccess().getColorCouleursEnumRuleCall_9_0()); }
		ruleCouleurs
		{ after(grammarAccess.getColonneAccess().getColorCouleursEnumRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDonnerAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getDonnerAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Donner__LinkAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDonnerAccess().getLinkEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getDonnerAccess().getLinkEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
